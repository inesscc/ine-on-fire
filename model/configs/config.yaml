# @package _global_

# specify here default training configuration
defaults:
  - trainer: default.yaml
  - model: greecefire_LSTM_model.yaml
  # - model: greecefire_ConvLSTM_model.yaml
  - datamodule: fireds_temporal_datamodule.yaml
  # - datamodule: fireds_temporal_datamodule.yaml
  # - callbacks: default.yaml # set this to null if you don't want to use callbacks
  # - callbacks: null # set this to null if you don't want to use callbacks  
  - callbacks: wandb # set this to null if you don't want to use callbacks  
  - logger: wandb # set logger here or use command line (e.g. `python run.py logger=wandb`)

  - experiment: null
  - hparams_search: null

  - hydra: default.yaml

  # enable color logging
#  - override hydra/hydra_logging: colorlog
#  - override hydra/job_logging: colorlog

# path to original working directory
# hydra hijacks working directory by changing it to the current log directory,
# so it's useful to have this path as a special variable
# learn more here: https://hydra.cc/docs/next/tutorials/basic/running_your_app/working_directory
work_dir: ${hydra:runtime.cwd}

# path to folder with data
data_dir: ${work_dir}

# use `python run.py debug=true` for easy debugging!
# this will run 1 train, val and test loop with only 1 batch
# equivalent to running `python run.py trainer.fast_dev_run=true`
# (this is placed here just for easier access from command line)
debug: False

# pretty print config at the start of the run using Rich library
print_config: True

# disable python warnings if they annoy you
ignore_warnings: True

# check performance on test set, using the best model achieved during training
# lightning chooses best model based on metric specified in checkpoint callback
test_after_training: True
# test_after_training: False

seed: 1234

sel_dynamic_features: [
  'ndvi',
  'evi',
  'ndwi',
  'd_areas_silvestres_protegidas',
  # 'd_red_hidrografica',
  # 'd_areas_urbanas',
  'd_red_vial',
  # "dewpoint_temperature_2m",
  "dewpoint_temperature_2m_max",
  # "dewpoint_temperature_2m_min",
  # "soil_temperature_level_1",
  "soil_temperature_level_1_max",
  # "soil_temperature_level_1_min",
  "temperature_2m",
  # "temperature_2m_max",
  # "temperature_2m_min",
  # "total_precipitation_max",
  # "total_precipitation_min",
  "total_precipitation_sum",
  # "u_component_of_wind_10m",
  "u_component_of_wind_10m_max",
  "u_component_of_wind_10m_min",
  # "v_component_of_wind_10m",
  "v_component_of_wind_10m_max",
  # "v_component_of_wind_10m_min",
  "volumetric_soil_water_layer_1",
  # "volumetric_soil_water_layer_1_max",
  "volumetric_soil_water_layer_1_min"
]

# # n = 7
# sel_static_features : [
#  'dem_mean',
# # 'aspect_mean',
#  'slope_mean',
# # 'roughness_mean',
#  'roads_distance',
#  'waterway_distance',
#  'population_density',
# ]

# clc: 'vec'
clc: null